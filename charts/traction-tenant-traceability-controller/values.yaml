---
nameOverride: ""
fullnameOverride: "traction-tenant-traceability-controller"
ingressSuffix: ""

ingress:
  enabled: true
  className: ""
  annotations:
    route.openshift.io/termination: edge
  tls: []

controller:
  fullName: controller
  host: "traceability.interop.vonx.io"
  image:
    repository: ghcr.io/bcgov/traction-tenant-traceability-controller
    pullPolicy: IfNotPresent
    pullSecrets: []
    tag: ""

  serviceAccount:
    create: false
    annotations: {}
    automountServiceAccountToken: false
    name: ""

  replicaCount: 1

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
    stabilizationWindowSeconds: 300

  podAnnotations: {}
  podSecurityContext: {}
  containerSecurityContext: {}

  service:
    type: ClusterIP
    apiPort: 8000

  openshift:
    route:
      enabled: true
      path: "/"
      targetPort: http
      timeout: 2m
      tls:
        enabled: false
        insecureEdgeTerminationPolicy: None
        termination: edge
      wildcardPolicy: None

  resources:
    limits:
      cpu: 100m
      memory: 512Mi
    requests:
      cpu: 10m
      memory: 128Mi

  networkPolicy:
    enabled: true
    ingress:
      enabled: true
      namespaceSelector:
        network.openshift.io/policy-group: ingress
      podSelector: {}

  affinity: {}
  nodeSelector: {}
  tolerations: []

  environment:
    POSTGRES_URI: ''
    DID_NAMESPACE: ''
    TRACTION_API_KEY: ''
    TRACTION_TENANT_ID: ''
    TRACTION_API_ENDPOINT: ''
    TRACEABILITY_CONTROLLER_DOMAIN: ''
    VERIFIER_ENDPOINT: ''

acapy:
  fullname: acapy
  image:
    repository: ghcr.io/hyperledger/aries-cloudagent-python
    pullPolicy: IfNotPresent
    pullSecrets: []
    tag: py3.9-0.12.0rc2

  serviceAccount:
    create: false
    annotations: {}
    automountServiceAccountToken: false
    name: ""

  replicaCount: 1

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
    stabilizationWindowSeconds: 300

  podAnnotations: {}
  podSecurityContext: {}
  containerSecurityContext: {}

  service:
    type: ClusterIP
    adminPort: 8020
    httpPort: 8021

  openshift:
    route:
      enabled: true
      path: "/"
      targetPort: http
      timeout: 2m
      tls:
        enabled: false
        insecureEdgeTerminationPolicy: None
        termination: edge
      wildcardPolicy: None

  resources:
    limits:
      cpu: "1"
      memory: 1000Mi
    requests:
      cpu: 250m
      memory: 384Mi

  networkPolicy:
    enabled: true
    ingress:
      enabled: true
      namespaceSelector:
        network.openshift.io/policy-group: ingress
      podSelector: {}

  affinity: {}
  nodeSelector: {}
  tolerations: []

postgresql:
  enabled: false
  fullnameOverride: ""
  architecture: standalone
  auth:
    enablePostgresUser: true
    existingSecret: '{{ include "global.fullname" . }}'
    secretKeys:
      adminPasswordKey: admin-password
      userPasswordKey: database-password
    database: traceability
    username: traceability

  ## PostgreSQL Primary parameters
  primary:
    persistence:
      enabled: true
      size: 1Gi
    containerSecurityContext:
      enabled: false
    podSecurityContext:
      enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 500Mi
      requests:
        cpu: 100m
        memory: 100Mi
    service:
      ports:
        postgresql: 5432
    extendedConfiguration: |
      max_connections = 500
